<!DOCTYPE html>
<html>
  <head>
    <title>Myapp</title>
    <%= csrf_meta_tags %>

    <script src="https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js"></script>

    <script
      src="https://code.jquery.com/jquery-3.3.1.js"
      integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
      crossorigin="anonymous"></script>

    <style type="text/css">

        body {
            background-color:#F0F0F0;
            padding: 2em;
            font-family: 'Raleway','Source Sans Pro', 'Arial';
        }
        .container {
            width: 50%;
            margin: 0 auto;
        }
        label {
            display:block;
            margin-bottom:10px;
        }
        input {
            padding:10px;
            width: 50%;
            margin-bottom: 1em;
        }
        button {
            margin: 2em 0;
            padding: 1em 4em;
            display:block;
        }

        #instructor {
            padding:1em;
            background-color:#fff;
            margin: 1em 0;
        }

        #loader {
            width: 100px;
            display:none;
        }
    </style>


  </head>

  <body>

  
  <script>
  

  /* 
  
    Note: Look into Async finctions and see how they are going to affect the whole process. 

  */


   // Initial setup 
   var ClientContract = null;
   var Client = null;
   var ConsultantContract = null;
   var Consultant = null;
   var ClientEvent = null;


   // Contract and account addresses & probably make them constant
   var ClientContractAddress = '0x6b3c4565f90efbdd8a06ec2f13982fa8c32f94fe';
   var ConsultantContractAddress = "0x10675c9d40238d4b4fb0b32582bb77b41b0ab8ef"; 
   var ConsultantReviewContractAddress = "0x5e48aab8a867a8250bb41506069896707336febd";
   var ClientReviewContractAddress = "0x38563ac0aabb090b306d9db879c4df7317fa98a8";

   var ClientABI = [{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"clientAccounts","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"firstName","type":"string"},{"indexed":false,"name":"lastName","type":"string"},{"indexed":false,"name":"company","type":"string"},{"indexed":false,"name":"account","type":"address"}],"name":"ClientEvent","type":"event"},{"constant":true,"inputs":[{"name":"_address","type":"address"}],"name":"clientExist","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_address","type":"address"}],"name":"clientDoesNotExist","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_address","type":"address"},{"name":"_firstName","type":"string"},{"name":"_lastName","type":"string"},{"name":"_company","type":"string"}],"name":"setClient","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getClients","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_address","type":"address"}],"name":"getClient","outputs":[{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"countClients","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_contractAddr","type":"address"},{"name":"_rating","type":"uint256"},{"name":"_comment","type":"bytes32"},{"name":"_consultantAccount","type":"address"},{"name":"_clientAccount","type":"address"}],"name":"setConsultantReview","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_contractAddr","type":"address"}],"name":"getConsultantReview","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"},{"name":"","type":"address"},{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_contractAddr","type":"address"},{"name":"_clientAccount","type":"address"}],"name":"getConsultantsReviews","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"bytes32[20]"},{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_contractAddr","type":"address"},{"name":"_consultantAccount","type":"address"},{"name":"_clientAccount","type":"address"}],"name":"getConsultantReviews","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"bytes32[20]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_contractAddr","type":"address"},{"name":"_clientAccount","type":"address"}],"name":"getClientFirstReview","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}];

   var ConsultantABI = [{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"consultantAccounts","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"constant":true,"inputs":[{"name":"_address","type":"address"}],"name":"consultantExist","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_address","type":"address"},{"name":"_firstName","type":"string"},{"name":"_lastName","type":"string"}],"name":"setConsultant","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getConsultants","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_address","type":"address"}],"name":"getConsultant","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"countConsultants","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_contractAddr","type":"address"},{"name":"_rating","type":"uint256"},{"name":"_comment","type":"string"},{"name":"_consultantAccount","type":"address"},{"name":"_clientAccount","type":"address"}],"name":"setClientReview","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_contractAddr","type":"address"}],"name":"getClientReview","outputs":[{"name":"","type":"uint256"},{"name":"","type":"string"},{"name":"","type":"address"},{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}];

   var ConsultantReviewABI = [{"constant":true,"inputs":[],"name":"testNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"clientAccounts","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"reviewsArray","outputs":[{"name":"rating","type":"uint256"},{"name":"comment","type":"bytes32"},{"name":"clientAccount","type":"address"},{"name":"consultantAccount","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"constant":false,"inputs":[{"name":"_rating","type":"uint256"},{"name":"_comment","type":"bytes32"},{"name":"_consultantAccount","type":"address"},{"name":"_clientAccount","type":"address"}],"name":"setReview","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getReview","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"},{"name":"","type":"address"},{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalReviews","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getClientAccounts","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_clientAccount","type":"address"}],"name":"getConsultantsReviews","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"bytes32[20]"},{"name":"","type":"address[]"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_clientAccount","type":"address"},{"name":"_consultantAccount","type":"address"}],"name":"getConsultantReviews","outputs":[{"name":"","type":"uint256[]"},{"name":"","type":"bytes32[20]"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_clientAccount","type":"address"}],"name":"getClientFirstReviewNow","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}];

   var ClientReviewABI = [{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"consultantAccounts","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"reviewsArray","outputs":[{"name":"rating","type":"uint256"},{"name":"comment","type":"string"},{"name":"consultantAccount","type":"address"},{"name":"clientAccount","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"constant":false,"inputs":[{"name":"_rating","type":"uint256"},{"name":"_comment","type":"string"},{"name":"_consultantAccount","type":"address"},{"name":"_clientAccount","type":"address"}],"name":"setReview","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getReview","outputs":[{"name":"","type":"uint256"},{"name":"","type":"string"},{"name":"","type":"address"},{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalReviews","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getConsultantAccounts","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"}];

  // Default user(admin account)
  var defaultAdminAccount = ''; // This account will be used to deploy code 



    if (typeof web3 !== 'undefined') {
      web3 = new Web3(web3.currentProvider);
      web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
      defaultAdminAccount = web3.eth.coinbase;
      initializeEthereumContarcts();


    } else {
      // Set the provider you want from Web3.providers
      web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
      defaultAdminAccount = web3.eth.coinbase;
      initializeEthereumContarcts();
      console.log("going to set the provider");
    }   
    

    function initializeEthereumContarcts(){
      console.log("initializeEthereumContarcts: " + defaultAdminAccount);
      web3.personal.unlockAccount(defaultAdminAccount);
      web3.eth.defaultAccount = defaultAdminAccount; // setting up default account

      ClientContract = web3.eth.contract(ClientABI);
      Client = ClientContract.at(ClientContractAddress);
      ClientContract.eth.defaultAccount = defaultAdminAccount;
      web3.personal.unlockAccount(ClientContract.eth.defaultAccount);
      // console.dir("Client: " + JSON.stringify(Client));
      console.dir(Client);

      ClientEvent = Client.ClientEvent();


    }


   $("#setClientButton").click(function() {
        $("#loader").show();
        console.log("going to set the client on bc");
       // Coursetro.setInstructor($("#name").val(), $("#age").val());
       Client.setClient($("#firstName").val(),$("#lastName").val(),$("#company").val(),web3.eth.accounts[6], {from: web3.eth.accounts[0],gas: 200000});
       console.log("function is been called already");
   });


    function submitConsultantReviewToBlockchain(){
        alert("consultant review from client");
        var consultant_address = document.getElementById("consultant_address").value;
        var consultant_rating = document.getElementById("consultant_rating").value;
        var consultant_review = document.getElementById("consultant_review").value;
        
        var first_name = "teeku";
        var last_nane = "khan";
        var company = "Train of Thought"

        // alert("addr: " + consultant_address + "   rating: " + consultant_rating + "  review: " + consultant_review);
        
        // var result = Client.setClient(web3.eth.accounts[6],first_name,last_nane, company, {from: web3.eth.accounts[0],gas: 200000});

        // alert("The result is: " + result);
        // alert(Client.getClient(web3.eth.accounts[6]));

        try {

            // var consultantReviewByClientResult = Client.setConsultantReview('0xde1f93ec956b880e1ea4923a1e201daa16946637',6, "consultant_review", web3.eth.accounts[3], web3.eth.accounts[7],{from: web3.eth.accounts[0],gas: 200000});
            // alert("consultantReviewByClientResult:  " + consultantReviewByClientResult);
            // alert(Client.getConsultantReview('0xde1f93ec956b880e1ea4923a1e201daa16946637'));

            alert("get consultant reviews: "+ Client.getClientFirstReview('0xcf4f5a678a1fcdd92e332d66661f1deafad4d34f',web3.eth.accounts[7]));



            // .getConsultantsReviews('0x5e48aab8a867a8250bb41506069896707336febd',web3.eth.accounts[7])
        }
        catch(err) {
            console.log("error: " + err);
        }

        return false;
    }




//     Client.setClient(web3.eth.accounts[7],"Blue","Box", "Blue Box LLC"),function(err,result){
//     if(!err){
//         console.log(result)
//     }
// };

  // Client.setClient(web3.eth.accounts[7],"Blue","Box", "Blue Box LLC").then(function(v) {console.log(v)});

  //   Client.getClients().then(function (result) {
  //     console.log(result);
  // });

  // Client.getClients.call(function (err, res) {

  //   if(!err){
  //     console.log("array: o:  "+res);
  //   }
  // });

  // Client.call.getClients();


// Client.getClient(web3.eth.accounts[7]).call(function (err, res) {

//     if(!err){
//       console.log("get client:  "+res);
//     }
//   });



  // Client.setClient(web3.eth.accounts[7],"Blue","Box", "Blue Box LLC").call(function (err, res) {

  //   if(!err){
  //     console.log(res);
  //   }
  // }); 

// //  ************
//   var result = Client.setClient(web3.eth.accounts[7],"Namrah","Waheed", "Blue Box LLC", {gas: 200000});

//   console.log("The result is: " + result);

//   console.log(Client.getClient(web3.eth.accounts[7]));

//   var consultantReviewByClientResult = Client.setConsultantReview("0x745e434d2e55a702ea3e181a83f7e27611c557cf",20,"nomi",web3.eth.accounts[3], {gas: 200000});

//   console.log("consultantReviewContractAddress: " + consultantReviewByClientResult);

//   console.log(Client.getConsultantReview('0x745e434d2e55a702ea3e181a83f7e27611c557cf'));
  //ClientContract.deployed().then(function(contractInstance) { contractInstance.getConsultantReview('0x745e434d2e55a702ea3e181a83f7e27611c557cf').then(function(v) {console.log(v)})})

// going to give review

// ClientContract.deployed().then(function(contractInstance) { contractInstance.setConsultantReview('0x6ed0dc7405602c58b174d6b508f48c42ed774f12',20,"meow",web3.eth.accounts[3]).then(function(v) {console.log(v)})})

//   ***********
  
  // ClientContract.deployed().then(function(contractInstance) { contractInstance.getClient(web3.eth.accounts[7]).then(function(v) {console.log(v)})})

//   Client.clientExist.call( ('jhjhj', result) => {
//   if (!error) {
//     console.log(result);
//     // console.log(result.dna);
//   }
// }); // transaction object not needed


// window.addEventListener('load', async () => {
//     // Modern dapp browsers...
//     if (window.ethereum) {
//         // window.web3 = new Web3(ethereum); // I am not sure how this works
//         window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
//         try {
//             // Request account access if needed
//             await ethereum.enable();
//             console.log("try modern dapp initialize");
//             web3.personal.unlockAccount(web3.eth.coinbase);
//             web3.eth.defaultAccount = web3.eth.coinbase; // setting up default account

//             console.log("default account: " + web3.eth.defaultAccount);
//             var ClientContract = web3.eth.contract(ClientABI);
//             var Client = ClientContract.at(ClientContractAddress);
//             ClientContract.eth.defaultAccount = web3.eth.coinbase;
//             web3.personal.unlockAccount(ClientContract.eth.defaultAccount);
//             // console.dir("Client: " + JSON.stringify(Client));
//             console.dir(Client);

//             // Acccounts now exposed
//             // web3.eth.sendTransaction({/* ... */});
//         } catch (error) {
//             // User denied account access...
//             console.log("catch modern error" + error);
//         }
//     }
//     // Legacy dapp browsers...
//     else if (window.web3) {
//         // window.web3 = new Web3(web3.currentProvider);
//        web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));       
//         console.log("Legacy dapp browser");
//         // Acccounts always exposed
//         // web3.eth.sendTransaction({/* ... */});
//     }
//     // Non-dapp browsers...
//     else {
//         console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');
//     }
// });



    ClientEvent.watch(function(error, result) {
               if (!error) {
                   $("#loader").hide();
                   $("#instructor").html(result.args.firstName + ' (' + result.args.lastName + ' years old)');
               } else {
                    $("#loader").hide();
               }
           });

       $("#setClientButton").click(function() {
            $("#loader").show();
            console.log("going to set the client on bc" + "#firstName").val().toString()+ "   "+ $("#lastName").val()$("#company").val() );
           // Coursetro.setInstructor($("#name").val(), $("#age").val());

           Client.setClient($("#firstName").val().toString(),$("#lastName").val(),$("#company").val(),web3.eth.accounts[6], {from: web3.eth.accounts[0],gas: 200000});
           console.log("function is been called already");
       });

       $('#bitto').click(function(){
          alert("Hello World");
          console.log("Button clicked");
       });


  </script>



    <%= yield %>

    <div class="container">

      <h2 id="instructor">:P</h2>
      <img id="loader" src="https://loading.io/spinners/double-ring/lg.double-ring-spinner.gif">

        <h1>Client Set</h1>

        <h2 id="instructor"></h2>
        <img id="loader" src="https://loading.io/spinners/double-ring/lg.double-ring-spinner.gif">

        <label for="name" class="col-lg-2 control-label">First Name</label>
        <input id="firstName" type="text">

        <label for="name" class="col-lg-2 control-label">Last Name</label>
        <input id="lastName" type="text">

        <label for="name" class="col-lg-2 control-label">Company Name</label>
        <input id="company" type="text">

        <label for="name" class="col-lg-2 control-label">Address</label>
        <input id="address" type="text">

        

        <button id="setClientButton">Update Instructor</button>

    </div>

    
    <button id="bitto">Click</button>


    <div>
        <form method="#" onsubmit="return submitConsultantReviewToBlockchain();">
            <div>
                <label> Consultant Address</label>
                <input type="text" id="consultant_address" /> <br />
                <label> Consultant Rating </label>
                <input type="text" id="consultant_rating" /> <br />
                <label> Consultant review text </label>
                <input type="text" id="consultant_review"> <br />

                <input type="submit">

            </div>
        </form>
    </div>




  </body>


</html>
